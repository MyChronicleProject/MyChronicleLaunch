services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: MyChronicleDatabase
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ./MyChronicleApp
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment: 
      ASPNETCORE_ENVIRONMENT: "Production"
      RUNNING_IN_CONTAINER: true
      DOCKER_CONNECTION_STRING: "Server=mysql;Database=MyChronicleDatabase;User Id=${MYSQL_USER};Password=${MYSQL_PASSWORD};"
      LOCAL_CONFIG_PATH: ${LOCAL_CONFIG_PATH}
    volumes:
      - ./local.json:/app/local.json:ro
    depends_on:
      mysql:
        condition: service_healthy
        restart: true

  client:
    build:
      context: ./MyChronicleClient
      dockerfile: Dockerfile
    ports:
      - "3000:80" # React app exposed on port 3000, served by Nginx

volumes:
  db_data:
